{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTable","className","this","props","emotions","map","keyword","emotion","sadness","joy","fear","disgust","anger","React","Component","App","state","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","document","getElementById","value","setState","renderTextBox","sendForSentimentAnalysis","url","fetch","then","response","text","data","output","style","color","fontSize","sendForEmotionAnalysis","json","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8QAuCeA,E,4JAnCb,WACE,OACE,8BACE,uBAAOC,UAAU,uBAAjB,SACE,gCACGC,KAAKC,MAAMC,SAASC,KAAI,SAACC,GAAD,OACvB,qCACE,+BACE,yCACA,6BAAKA,EAAQC,QAAQC,aAEvB,+BACE,qCACA,6BAAKF,EAAQC,QAAQE,SAEvB,+BACE,sCACA,6BAAKH,EAAQC,QAAQG,UAEvB,+BACE,yCACA,6BAAKJ,EAAQC,QAAQI,aAEvB,+BACE,uCACA,6BAAKL,EAAQC,QAAQK,2B,GA1BZC,IAAMC,WC+GlBC,E,4MA5GbC,MAAQ,CACNC,UAAW,0BAAUC,KAAK,IAAIC,KAAK,KAAKC,GAAG,cAC3CC,KAAM,OACNC,gBAAiB,GACjBC,WAAW,G,EAGbC,eAAiB,WACfC,SAASC,eAAe,aAAaC,MAAQ,GACrB,QAApB,EAAKX,MAAMK,MACb,EAAKO,SAAS,CACZX,UAAW,0BAAUC,KAAK,IAAIC,KAAK,KAAKC,GAAG,cAC3CC,KAAM,OACNC,gBAAiB,GACjBC,WAAW,K,EAKjBM,cAAgB,WACdJ,SAASC,eAAe,aAAaC,MAAQ,GACrB,SAApB,EAAKX,MAAMK,MACb,EAAKO,SAAS,CACZX,UAAW,0BAAUC,KAAK,IAAIC,KAAK,KAAKC,GAAG,cAC3CC,KAAM,MACNC,gBAAiB,GACjBC,WAAW,K,EAKjBO,yBAA2B,WACzB,EAAKF,SAAS,CAAEL,WAAW,IAC3B,IAAIQ,EAAM,IAGRA,EADsB,QAApB,EAAKf,MAAMK,KAEXU,EACA,sBACAN,SAASC,eAAe,aAAaC,MAGrCI,EACA,wBACAN,SAASC,eAAe,aAAaC,MAEzCK,MAAMD,GAAKE,MAAK,SAACC,GACfA,EAASC,OAAOF,MAAK,SAACG,GACpB,EAAKR,SAAS,CAAEN,gBAAiBc,IACjC,IAAIC,EAASD,EAEXC,EADW,aAATD,EACO,qBAAKE,MAAO,CAAEC,MAAO,QAASC,SAAU,IAAxC,SAA+CJ,IACtC,aAATA,EACA,qBAAKE,MAAO,CAAEC,MAAO,MAAOC,SAAU,IAAtC,SAA6CJ,IAE7C,qBAAKE,MAAO,CAAEC,MAAO,SAAUC,SAAU,IAAzC,SAAgDJ,IAE3D,EAAKR,SAAS,CAAEN,gBAAiBe,W,EAKvCI,uBAAyB,WACvB,EAAKb,SAAS,CAAEL,WAAW,IAC3B,IAAIQ,EAAM,IAERA,EADsB,QAApB,EAAKf,MAAMK,KAEXU,EAAM,oBAAsBN,SAASC,eAAe,aAAaC,MAGjEI,EACA,uBACAN,SAASC,eAAe,aAAaC,MAEzCK,MAAMD,GAAKE,MAAK,SAACC,GACfA,EAASQ,OAAOT,MAAK,SAACG,GACpB,EAAKR,SAAS,CAAEN,gBAAiB,cAAC,EAAD,CAAclB,SAAUgC,a,4CAK/D,WACE,OACE,sBAAKnC,UAAU,MAAf,UACE,oDACA,wBAAQA,UAAU,eAAe0C,QAASzC,KAAKsB,eAA/C,kBAGA,wBAAQvB,UAAU,eAAe0C,QAASzC,KAAK2B,cAA/C,iBAGA,uBACA,uBACC3B,KAAKc,MAAMC,UACZ,uBACA,wBAAQhB,UAAU,cAAc0C,QAASzC,KAAK4B,yBAA9C,+BAGA,wBAAQ7B,UAAU,cAAc0C,QAASzC,KAAKuC,uBAA9C,6BAGA,uBACCvC,KAAKc,MAAMM,uB,GAvGFT,IAAMC,WCOT8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,SAM1BkB,K","file":"static/js/main.ceafecab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./bootstrap.min.css\";\r\n\r\nclass EmotionTable extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className=\"table table-bordered\">\r\n          <tbody>\r\n            {this.props.emotions.map((keyword) => (\r\n              <>\r\n                <tr>\r\n                  <td>sadness</td>\r\n                  <td>{keyword.emotion.sadness}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>joy</td>\r\n                  <td>{keyword.emotion.joy}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>fear</td>\r\n                  <td>{keyword.emotion.fear}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>disgust</td>\r\n                  <td>{keyword.emotion.disgust}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>anger</td>\r\n                  <td>{keyword.emotion.anger}</td>\r\n                </tr>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EmotionTable;\r\n","import \"./bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport EmotionTable from \"./EmotionTable.js\";\r\nimport React from \"react\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    innercomp: <textarea rows=\"4\" cols=\"50\" id=\"textinput\" />,\r\n    mode: \"text\",\r\n    sentimentOutput: [],\r\n    sentiment: true,\r\n  };\r\n\r\n  renderTextArea = () => {\r\n    document.getElementById(\"textinput\").value = \"\";\r\n    if (this.state.mode === \"url\") {\r\n      this.setState({\r\n        innercomp: <textarea rows=\"4\" cols=\"50\" id=\"textinput\" />,\r\n        mode: \"text\",\r\n        sentimentOutput: [],\r\n        sentiment: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  renderTextBox = () => {\r\n    document.getElementById(\"textinput\").value = \"\";\r\n    if (this.state.mode === \"text\") {\r\n      this.setState({\r\n        innercomp: <textarea rows=\"1\" cols=\"50\" id=\"textinput\" />,\r\n        mode: \"url\",\r\n        sentimentOutput: [],\r\n        sentiment: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  sendForSentimentAnalysis = () => {\r\n    this.setState({ sentiment: true });\r\n    let url = \".\";\r\n\r\n    if (this.state.mode === \"url\") {\r\n      url =\r\n        url +\r\n        \"/url/sentiment?url=\" +\r\n        document.getElementById(\"textinput\").value;\r\n    } else {\r\n      url =\r\n        url +\r\n        \"/text/sentiment?text=\" +\r\n        document.getElementById(\"textinput\").value;\r\n    }\r\n    fetch(url).then((response) => {\r\n      response.text().then((data) => {\r\n        this.setState({ sentimentOutput: data });\r\n        let output = data;\r\n        if (data === \"positive\") {\r\n          output = <div style={{ color: \"green\", fontSize: 20 }}>{data}</div>;\r\n        } else if (data === \"negative\") {\r\n          output = <div style={{ color: \"red\", fontSize: 20 }}>{data}</div>;\r\n        } else {\r\n          output = <div style={{ color: \"yellow\", fontSize: 20 }}>{data}</div>;\r\n        }\r\n        this.setState({ sentimentOutput: output });\r\n      });\r\n    });\r\n  };\r\n\r\n  sendForEmotionAnalysis = () => {\r\n    this.setState({ sentiment: false });\r\n    let url = \".\";\r\n    if (this.state.mode === \"url\") {\r\n      url =\r\n        url + \"/url/emotion?url=\" + document.getElementById(\"textinput\").value;\r\n    } else {\r\n      url =\r\n        url +\r\n        \"/text/emotion/?text=\" +\r\n        document.getElementById(\"textinput\").value;\r\n    }\r\n    fetch(url).then((response) => {\r\n      response.json().then((data) => {\r\n        this.setState({ sentimentOutput: <EmotionTable emotions={data} /> });\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Sentiment Analyzer</h1>\r\n        <button className=\"btn btn-info\" onClick={this.renderTextArea}>\r\n          Text\r\n        </button>\r\n        <button className=\"btn btn-dark\" onClick={this.renderTextBox}>\r\n          URL\r\n        </button>\r\n        <br />\r\n        <br />\r\n        {this.state.innercomp}\r\n        <br />\r\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>\r\n          Analyze Sentiment\r\n        </button>\r\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>\r\n          Analyze Emotion\r\n        </button>\r\n        <br />\r\n        {this.state.sentimentOutput}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}